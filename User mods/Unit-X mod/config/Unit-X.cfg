#PID_CALIBRATE HEATER=iDryer_UX_Heater TARGET=100

[board_pins unit-x]
mcu:unit-x
aliases:
    T_UX=PC0, H_UX=PD5, FAN_UX=PB3, SRV_UX=PD7,    
    
[mcu unit-x]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: arduino
   
[static_digital_output Connects_LED]
pins: unit-x:PB5

#==================================================
#=====================CONFIG=======================
#==================================================
[heater_generic iDryer_UX_Heater]
heater_pin: unit-x:H_UX
max_power: 1
sensor_type: NTC 100K MGB18-104F39050L32 #Generic 3950
#sensor_type: ATC Semitec 104GT-2 #104GT
sensor_pin: unit-x:T_UX
control: pid
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 135
pid_Kp=19.523
pid_Ki=2.829
pid_Kd=33.685


[verify_heater iDryer_UX_Heater]
max_error: 240
check_gain_time: 120
heating_gain: 1


[heater_fan Fan_UX]
fan_speed: 1
pin: unit-x:FAN_UX
heater: iDryer_UX_Heater
heater_temp: 55


#==================================================
#=======================BME========================
#==================================================
[temperature_sensor iDryer_UX_Air]
sensor_type: BME280
i2c_mcu: unit-x
i2c_address: 118 

[gcode_macro HUMIDITY_QUERY_IDRYER_UX]
gcode:
    {action_respond_info("UX Humidity  %.2f%%" %(printer["bme280 iDryer_UX_Air"].humidity))}


[gcode_macro QUERY_IDRYER_UX]
gcode:
    {action_respond_info("UX temperature: %.2f C, Humidity: %.2f%%" % (
        printer["bme280 iDryer_UX_Air"].temperature,
        printer["bme280 iDryer_UX_Air"].humidity))}


#==================================================
#=====================SERVO========================
# https://www.klipper3d.org/Config_Reference.html?h=temper#servo
#==================================================

[servo srv_UX]
pin: unit-x:SRV_UX
maximum_servo_angle: 180
minimum_pulse_width: 0.00055 #0.00055
maximum_pulse_width: 0.002


[gcode_macro servo_UX]
gcode:
    {% set angle = params.ANGLE|default(90)|int %} 
    SET_SERVO SERVO=srv_UX ANGLE={angle}
    

[delayed_gcode _TOGGLE_SERVO_UX]
gcode:
    {% set unit_data = printer['gcode_macro DRY_UX'] %}
    {% set servo_angle = unit_data.servo_angle %}
    
    HUMIDITY_QUERY_IDRYER_UX
    {% if servo_angle == printer['gcode_macro DRY_UX'].servo_open_angle %}
        SET_SERVO SERVO=srv_UX ANGLE={printer['gcode_macro DRY_UX'].servo_closed_angle}
        { action_respond_info("----------SERVO CLOSE ---------- servo_angle  %s" %(servo_angle))}
        
        SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_UX'].servo_closed_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_UX DURATION={printer['gcode_macro DRY_UX'].servo_closed_time}
    {% elif servo_angle == printer['gcode_macro DRY_UX'].servo_closed_angle %}
        SET_SERVO SERVO=srv_UX ANGLE={printer['gcode_macro DRY_UX'].servo_open_angle}
        { action_respond_info("----------SERVO OPEN ---------- servo_angle  %s" %(servo_angle))}
        
        SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_UX'].servo_open_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_UX DURATION={printer['gcode_macro DRY_UX'].servo_open_time}
    {% endif %}



#========================================================
#=====================iDryer macros======================
#========================================================
[gcode_macro OFF_UX]
gcode:
    UPDATE_DELAYED_GCODE ID=_UPDATE_UX DURATION=0
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_UX DURATION=0
    SET_HEATER_TEMPERATURE HEATER=iDryer_UX_Heater TARGET=0

[delayed_gcode _OFF_UX]
gcode:
    OFF_UX


[gcode_macro PLA_UX]
variable_unit_temp: 55
variable_unit_duration: 180
gcode:
    DRY_UX UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PETG_UX]
variable_unit_temp: 65
variable_unit_duration: 240
gcode:
    DRY_UX UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro TPU_UX]
variable_unit_temp: 60
variable_unit_duration: 300
gcode:
    DRY_UX UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro ABS_UX]
variable_unit_temp: 80
variable_unit_duration: 240
gcode:
    DRY_UX UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PA_UX]
variable_unit_temp: 90
variable_unit_duration: 240
gcode:
    DRY_UX UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro DRY_UX]
variable_temp: 5
variable_humidity: 5
variable_duration: 5
variable_off_timer_set: 0 
variable_delta_high: 30
variable_servo_angle: 87 #degrees
variable_servo_open_angle: 180 #degrees
variable_servo_closed_angle: 87 #degrees
variable_servo_open_time: 10 #second
variable_servo_closed_time: 300 #second
variable_data: {}
gcode:
    {% set set_unit_temp = params.UNIT_TEMPERATURE|default(40)|int %} 
    {% set set_unit_humidity = params.HUMIDITY|default(10)|int%} 
    {% set set_unit_duration = params.TIME|default(240)|int%}
    
    SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=servo_angle VALUE={servo_closed_angle}
    SET_SERVO SERVO=srv_UX ANGLE={servo_angle}


    {action_respond_info("Humidity  %.2f%%" %(printer["bme280 iDryer_UX_Air"].humidity))}
    SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=temp VALUE={set_unit_temp}
    SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=humidity VALUE={set_unit_humidity}
    SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=duration VALUE={set_unit_duration}

    UPDATE_DELAYED_GCODE ID=_UPDATE_UX DURATION=1
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_UX DURATION=2


[delayed_gcode _UPDATE_UX]
gcode:
    {% set unit_data = printer['gcode_macro DRY_UX'] %}
    {% set temperature = unit_data.temp %}
    {% set delta_high =  unit_data.delta_high %}
    {% set dry_duration =  unit_data.duration %}
    {% set off_timer_set = unit_data.off_timer_set %} 
    
    
    {% if printer['temperature_sensor iDryer_UX_Air'].temperature|int > temperature|int %}
        {% set target_temp = 0|int %}
    {% elif printer['temperature_sensor iDryer_UX_Air'].temperature|int == temperature|int %}
        {% if off_timer_set == 0 %}
            UPDATE_DELAYED_GCODE ID=_OFF_UX DURATION={dry_duration * 60}
            SET_GCODE_VARIABLE MACRO=DRY_UX VARIABLE=off_timer_set VALUE=1
        {% endif %}

        {% set target_temp = printer['temperature_sensor iDryer_UX_Air'].temperature|int %}
    {% elif printer['temperature_sensor iDryer_UX_Air'].temperature|int < temperature|int %}
        {% set target_temp = temperature - printer['temperature_sensor iDryer_UX_Air'].temperature + temperature + delta_high%}
        {% if target_temp > temperature + delta_high %} 
            {% set target_temp = temperature|int + delta_high|int %}
        {% endif %}
    {% endif %}
    
    SET_HEATER_TEMPERATURE HEATER=iDryer_UX_Heater TARGET={target_temp|int}
    UPDATE_DELAYED_GCODE ID=_UPDATE_UX DURATION=1

